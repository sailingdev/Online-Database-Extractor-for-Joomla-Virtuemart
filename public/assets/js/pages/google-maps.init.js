/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 35);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/pages/google-maps.init.js":
/*!************************************************!*\
  !*** ./resources/js/pages/google-maps.init.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\nAuthor: CoderThemes\nWebsite: https://coderthemes.com/\nContact: support@coderthemes.com\nFile: Google maps init js\n*/\n!function ($) {\n  \"use strict\";\n\n  var GoogleMap = function GoogleMap() {}; //creates basic map\n\n\n  GoogleMap.prototype.createBasic = function ($container) {\n    return new GMaps({\n      div: $container,\n      lat: -12.043333,\n      lng: -77.028333\n    });\n  }, //creates map with markers\n  GoogleMap.prototype.createMarkers = function ($container) {\n    var map = new GMaps({\n      div: $container,\n      lat: -12.043333,\n      lng: -77.028333\n    }); //sample markers, but you can pass actual marker data as function parameter\n\n    map.addMarker({\n      lat: -12.043333,\n      lng: -77.03,\n      title: 'Lima',\n      details: {\n        database_id: 42,\n        author: 'HPNeo'\n      },\n      click: function click(e) {\n        if (console.log) console.log(e);\n        alert('You clicked in this marker');\n      }\n    });\n    map.addMarker({\n      lat: -12.042,\n      lng: -77.028333,\n      title: 'Marker with InfoWindow',\n      infoWindow: {\n        content: '<p>HTML Content</p>'\n      }\n    });\n    return map;\n  }, //creates map with polygone\n  GoogleMap.prototype.createWithPolygon = function ($container, $path) {\n    var map = new GMaps({\n      div: $container,\n      lat: -12.043333,\n      lng: -77.028333\n    });\n    var polygon = map.drawPolygon({\n      paths: $path,\n      strokeColor: '#BBD8E9',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n      fillColor: '#BBD8E9',\n      fillOpacity: 0.6\n    });\n    return map;\n  }, //creates map with overlay\n  GoogleMap.prototype.createWithOverlay = function ($container) {\n    var map = new GMaps({\n      div: $container,\n      lat: -12.043333,\n      lng: -77.028333\n    });\n    map.drawOverlay({\n      lat: map.getCenter().lat(),\n      lng: map.getCenter().lng(),\n      content: '<div class=\"gmaps-overlay\">Our Office!<div class=\"gmaps-overlay_arrow above\"></div></div>',\n      verticalAlign: 'top',\n      horizontalAlign: 'center'\n    });\n    return map;\n  }, //creates map with street view\n  GoogleMap.prototype.createWithStreetview = function ($container, $lat, $lng) {\n    return GMaps.createPanorama({\n      el: $container,\n      lat: $lat,\n      lng: $lng\n    });\n  }, //Routes\n  GoogleMap.prototype.createWithRoutes = function ($container, $lat, $lng) {\n    var map = new GMaps({\n      div: $container,\n      lat: $lat,\n      lng: $lng\n    });\n    $('#start_travel').click(function (e) {\n      e.preventDefault();\n      map.travelRoute({\n        origin: [-12.044012922866312, -77.02470665341184],\n        destination: [-12.090814532191756, -77.02271108990476],\n        travelMode: 'driving',\n        step: function step(e) {\n          $('#instructions').append('<li>' + e.instructions + '</li>');\n          $('#instructions li:eq(' + e.step_number + ')').delay(450 * e.step_number).fadeIn(200, function () {\n            map.setCenter(e.end_location.lat(), e.end_location.lng());\n            map.drawPolyline({\n              path: e.path,\n              strokeColor: '#131540',\n              strokeOpacity: 0.6,\n              strokeWeight: 6\n            });\n          });\n        }\n      });\n    });\n    return map;\n  }, //Type\n  GoogleMap.prototype.createMapByType = function ($container, $lat, $lng) {\n    var map = new GMaps({\n      div: $container,\n      lat: $lat,\n      lng: $lng,\n      mapTypeControlOptions: {\n        mapTypeIds: [\"hybrid\", \"roadmap\", \"satellite\", \"terrain\", \"osm\", \"cloudmade\"]\n      }\n    });\n    map.addMapType(\"osm\", {\n      getTileUrl: function getTileUrl(coord, zoom) {\n        return \"http://tile.openstreetmap.org/\" + zoom + \"/\" + coord.x + \"/\" + coord.y + \".png\";\n      },\n      tileSize: new google.maps.Size(256, 256),\n      name: \"OpenStreetMap\",\n      maxZoom: 18\n    });\n    map.addMapType(\"cloudmade\", {\n      getTileUrl: function getTileUrl(coord, zoom) {\n        return \"http://b.tile.cloudmade.com/8ee2a50541944fb9bcedded5165f09d9/1/256/\" + zoom + \"/\" + coord.x + \"/\" + coord.y + \".png\";\n      },\n      tileSize: new google.maps.Size(256, 256),\n      name: \"CloudMade\",\n      maxZoom: 18\n    });\n    map.setMapTypeId(\"osm\");\n    return map;\n  }, GoogleMap.prototype.createWithMenu = function ($container, $lat, $lng) {\n    var map = new GMaps({\n      div: $container,\n      lat: $lat,\n      lng: $lng\n    });\n    map.setContextMenu({\n      control: 'map',\n      options: [{\n        title: 'Add marker',\n        name: 'add_marker',\n        action: function action(e) {\n          this.addMarker({\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng(),\n            title: 'New marker'\n          });\n          this.hideContextMenu();\n        }\n      }, {\n        title: 'Center here',\n        name: 'center_here',\n        action: function action(e) {\n          this.setCenter(e.latLng.lat(), e.latLng.lng());\n        }\n      }]\n    });\n  }, //Type\n  GoogleMap.prototype.createMapByType = function ($container, $lat, $lng) {\n    var map = new GMaps({\n      div: $container,\n      lat: $lat,\n      lng: $lng,\n      mapTypeControlOptions: {\n        mapTypeIds: [\"hybrid\", \"roadmap\", \"satellite\", \"terrain\", \"osm\", \"cloudmade\"]\n      }\n    });\n    map.addMapType(\"osm\", {\n      getTileUrl: function getTileUrl(coord, zoom) {\n        return \"http://tile.openstreetmap.org/\" + zoom + \"/\" + coord.x + \"/\" + coord.y + \".png\";\n      },\n      tileSize: new google.maps.Size(256, 256),\n      name: \"OpenStreetMap\",\n      maxZoom: 18\n    });\n    map.addMapType(\"cloudmade\", {\n      getTileUrl: function getTileUrl(coord, zoom) {\n        return \"http://b.tile.cloudmade.com/8ee2a50541944fb9bcedded5165f09d9/1/256/\" + zoom + \"/\" + coord.x + \"/\" + coord.y + \".png\";\n      },\n      tileSize: new google.maps.Size(256, 256),\n      name: \"CloudMade\",\n      maxZoom: 18\n    });\n    map.setMapTypeId(\"osm\");\n    return map;\n  }, //creates map with style\n  GoogleMap.prototype.createWithStyle = function ($container, styleJson) {\n    var map = new GMaps({\n      div: $container,\n      lat: -12.043333,\n      lng: -77.028333,\n      styles: styleJson\n    });\n  }, //init\n  GoogleMap.prototype.init = function () {\n    var $this = this;\n    $(document).ready(function () {\n      //creating basic map\n      $this.createBasic('#gmaps-basic'), //with sample markers\n      $this.createMarkers('#gmaps-markers'); //polygon\n\n      var path = [[-12.040397656836609, -77.03373871559225], [-12.040248585302038, -77.03993927003302], [-12.050047116528843, -77.02448169303511], [-12.044804866577001, -77.02154422636042]];\n      $this.createWithPolygon('#gmaps-polygons', path); //overlay\n\n      $this.createWithOverlay('#gmaps-overlay'); //street view\n\n      $this.createWithStreetview('#panorama', 42.3455, -71.0983); //routes\n\n      $this.createWithRoutes('#gmaps-route', -12.043333, -77.028333); //types\n\n      $this.createMapByType('#gmaps-types', -12.043333, -77.028333); //statu\n\n      $this.createWithMenu('#gmaps-menu', -12.043333, -77.028333); // style - ultra light\n\n      $this.createWithStyle(\"#ultra-light\", [{\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#e9e9e9\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 29\n        }, {\n          \"weight\": 0.2\n        }]\n      }, {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 18\n        }]\n      }, {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#dedede\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [{\n          \"visibility\": \"on\"\n        }, {\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [{\n          \"saturation\": 36\n        }, {\n          \"color\": \"#333333\"\n        }, {\n          \"lightness\": 40\n        }]\n      }, {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [{\n          \"visibility\": \"off\"\n        }]\n      }, {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f2f2f2\"\n        }, {\n          \"lightness\": 19\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 17\n        }, {\n          \"weight\": 1.2\n        }]\n      }]);\n    });\n    $this.createWithStyle(\"#dark\", [{\n      \"featureType\": \"all\",\n      \"elementType\": \"labels\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }]\n    }, {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"saturation\": 36\n      }, {\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 40\n      }]\n    }, {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }, {\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 16\n      }]\n    }, {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 20\n      }]\n    }, {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 17\n      }, {\n        \"weight\": 1.2\n      }]\n    }, {\n      \"featureType\": \"administrative.country\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#e5c163\"\n      }]\n    }, {\n      \"featureType\": \"administrative.locality\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#c4c4c4\"\n      }]\n    }, {\n      \"featureType\": \"administrative.neighborhood\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#e5c163\"\n      }]\n    }, {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 20\n      }]\n    }, {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 21\n      }, {\n        \"visibility\": \"on\"\n      }]\n    }, {\n      \"featureType\": \"poi.business\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#e5c163\"\n      }, {\n        \"lightness\": \"0\"\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [{\n        \"color\": \"#e5c163\"\n      }]\n    }, {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 18\n      }]\n    }, {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#575757\"\n      }]\n    }, {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }]\n    }, {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [{\n        \"color\": \"#2c2c2c\"\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 16\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"color\": \"#999999\"\n      }]\n    }, {\n      \"featureType\": \"transit\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 19\n      }]\n    }, {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#000000\"\n      }, {\n        \"lightness\": 17\n      }]\n    }]);\n  }, //init\n  $.GoogleMap = new GoogleMap(), $.GoogleMap.Constructor = GoogleMap;\n}(window.jQuery), //initializing \nfunction ($) {\n  \"use strict\";\n\n  $.GoogleMap.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/google-maps.init.js\n");

/***/ }),

/***/ 35:
/*!******************************************************!*\
  !*** multi ./resources/js/pages/google-maps.init.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/nikhil/workspace/themes/Ubold/ubold/laravel/laravel/resources/js/pages/google-maps.init.js */"./resources/js/pages/google-maps.init.js");


/***/ })

/******/ });