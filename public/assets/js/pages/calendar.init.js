/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/pages/calendar.init.js":
/*!*********************************************!*\
  !*** ./resources/js/pages/calendar.init.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\nAuthor: CoderThemes\nWebsite: https://coderthemes.com/\nContact: support@coderthemes.com\nFile: Calendar init js\n*/\n!function ($) {\n  \"use strict\";\n\n  var CalendarApp = function CalendarApp() {\n    this.$body = $(\"body\");\n    this.$modal = $('#event-modal'), this.$calendar = $('#calendar'), this.$formEvent = $(\"#form-event\"), this.$btnNewEvent = $(\"#btn-new-event\"), this.$btnDeleteEvent = $(\"#btn-delete-event\"), this.$btnSaveEvent = $(\"#btn-save-event\"), this.$modalTitle = $(\"#modal-title\"), this.$calendarObj = null, this.$selectedEvent = null, this.$newEventData = null;\n  };\n  /* on click on event */\n\n\n  CalendarApp.prototype.onEventClick = function (info) {\n    this.$formEvent[0].reset();\n    this.$formEvent.removeClass(\"was-validated\");\n    this.$newEventData = null;\n    this.$btnDeleteEvent.show();\n    this.$modalTitle.text('Edit Event');\n    this.$modal.modal({\n      backdrop: 'static'\n    });\n    this.$selectedEvent = info.event;\n    $(\"#event-title\").val(this.$selectedEvent.title);\n    $(\"#event-category\").val(this.$selectedEvent.classNames[0]);\n  },\n  /* on select */\n  CalendarApp.prototype.onSelect = function (info) {\n    this.$formEvent[0].reset();\n    this.$formEvent.removeClass(\"was-validated\");\n    this.$selectedEvent = null;\n    this.$newEventData = info;\n    this.$btnDeleteEvent.hide();\n    this.$modalTitle.text('Add New Event');\n    this.$modal.modal({\n      backdrop: 'static'\n    });\n    this.$calendarObj.unselect();\n  },\n  /* Initializing */\n  CalendarApp.prototype.init = function () {\n    /*  Initialize the calendar  */\n    var today = new Date($.now());\n    var Draggable = FullCalendarInteraction.Draggable;\n    var externalEventContainerEl = document.getElementById('external-events'); // init dragable\n\n    new Draggable(externalEventContainerEl, {\n      itemSelector: '.external-event',\n      eventData: function eventData(eventEl) {\n        return {\n          title: eventEl.innerText,\n          className: $(eventEl).data('class')\n        };\n      }\n    });\n    var defaultEvents = [{\n      title: 'Meeting with Mr. Shreyu',\n      start: new Date($.now() + 158000000),\n      end: new Date($.now() + 338000000),\n      className: 'bg-warning'\n    }, {\n      title: 'Interview - Backend Engineer',\n      start: today,\n      end: today,\n      className: 'bg-success'\n    }, {\n      title: 'Phone Screen - Frontend Engineer',\n      start: new Date($.now() + 168000000),\n      className: 'bg-info'\n    }, {\n      title: 'Buy Design Assets',\n      start: new Date($.now() + 338000000),\n      end: new Date($.now() + 338000000 * 1.2),\n      className: 'bg-primary'\n    }];\n    var $this = this; // cal - init\n\n    $this.$calendarObj = new FullCalendar.Calendar($this.$calendar[0], {\n      plugins: ['bootstrap', 'interaction', 'dayGrid', 'timeGrid', 'list'],\n      slotDuration: '00:15:00',\n\n      /* If we want to split day time each 15minutes */\n      minTime: '08:00:00',\n      maxTime: '19:00:00',\n      themeSystem: 'bootstrap',\n      bootstrapFontAwesome: false,\n      buttonText: {\n        today: 'Today',\n        month: 'Month',\n        week: 'Week',\n        day: 'Day',\n        list: 'List',\n        prev: 'Prev',\n        next: 'Next'\n      },\n      defaultView: 'dayGridMonth',\n      handleWindowResize: true,\n      height: $(window).height() - 200,\n      header: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n      },\n      events: defaultEvents,\n      editable: true,\n      droppable: true,\n      // this allows things to be dropped onto the calendar !!!\n      eventLimit: true,\n      // allow \"more\" link when too many events\n      selectable: true,\n      dateClick: function dateClick(info) {\n        $this.onSelect(info);\n      },\n      eventClick: function eventClick(info) {\n        $this.onEventClick(info);\n      }\n    });\n    $this.$calendarObj.render(); // on new event button click\n\n    $this.$btnNewEvent.on('click', function (e) {\n      $this.onSelect({\n        date: new Date(),\n        allDay: true\n      });\n    }); // save event\n\n    $this.$formEvent.on('submit', function (e) {\n      e.preventDefault();\n      var form = $this.$formEvent[0]; // validation\n\n      if (form.checkValidity()) {\n        if ($this.$selectedEvent) {\n          $this.$selectedEvent.setProp('title', $(\"#event-title\").val());\n          $this.$selectedEvent.setProp('classNames', [$(\"#event-category\").val()]);\n        } else {\n          var eventData = {\n            title: $(\"#event-title\").val(),\n            start: $this.$newEventData.date,\n            allDay: $this.$newEventData.allDay,\n            className: $(\"#event-category\").val()\n          };\n          $this.$calendarObj.addEvent(eventData);\n        }\n\n        $this.$modal.modal('hide');\n      } else {\n        e.stopPropagation();\n        form.classList.add('was-validated');\n      }\n    }); // delete event\n\n    $($this.$btnDeleteEvent.on('click', function (e) {\n      if ($this.$selectedEvent) {\n        $this.$selectedEvent.remove();\n        $this.$selectedEvent = null;\n        $this.$modal.modal('hide');\n      }\n    }));\n  }, //init CalendarApp\n  $.CalendarApp = new CalendarApp(), $.CalendarApp.Constructor = CalendarApp;\n}(window.jQuery), //initializing CalendarApp\nfunction ($) {\n  \"use strict\";\n\n  $.CalendarApp.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/calendar.init.js\n");

/***/ }),

/***/ 5:
/*!***************************************************!*\
  !*** multi ./resources/js/pages/calendar.init.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/nikhil/workspace/themes/Ubold/ubold/laravel/laravel/resources/js/pages/calendar.init.js */"./resources/js/pages/calendar.init.js");


/***/ })

/******/ });